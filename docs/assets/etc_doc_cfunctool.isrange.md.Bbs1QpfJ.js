import{_ as s,c as t,o as i,ae as e}from"./chunks/framework.D5-4uJj8.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/cfunctool.isrange.md","filePath":"etc/doc/cfunctool.isrange.md"}'),n={name:"etc/doc/cfunctool.isrange.md"};function p(l,a,r,h,o,d){return i(),t("div",null,a[0]||(a[0]=[e('<p><a href="./">Home</a> &gt; <a href="./cfunctool.html">cfunctool</a> &gt; <a href="./cfunctool.isrange.html">isRange</a></p><h2 id="isrange-function" tabindex="-1">isRange() function <a class="header-anchor" href="#isrange-function" aria-label="Permalink to &quot;isRange() function&quot;">​</a></h2><p>检查给定的数字是否在指定范围内。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>number</p></td><td><p>any</p></td><td><p>要检查的数字。</p></td></tr><tr><td><p>start</p></td><td><p>any</p></td><td><p>范围的起始值。</p></td></tr><tr><td><p>end</p></td><td><p>any</p></td><td><p><em>(Optional)</em> 可选的范围的结束值。如果未提供，则范围从 0 到 <code>start</code>。</p></td></tr></tbody></table> **Returns:** <p>boolean</p><p>如果数字在指定范围内则返回 true，否则返回 false。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>console.log(isRange(5, 1, 10)); // 输出: true console.log(isRange(5, 10)); // 输出: false console.log(isRange(5, 5)); // 输出: true console.log(isRange(5, 10, 1)); // 输出: true console.log(isRange(5, &#39;a&#39;, 10)); // 输出: false</p>',12)]))}const g=s(n,[["render",p]]);export{c as __pageData,g as default};

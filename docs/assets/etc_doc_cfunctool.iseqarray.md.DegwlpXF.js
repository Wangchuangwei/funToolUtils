import{_ as s,c as t,o as i,ae as r}from"./chunks/framework.D5-4uJj8.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/cfunctool.iseqarray.md","filePath":"etc/doc/cfunctool.iseqarray.md"}'),e={name:"etc/doc/cfunctool.iseqarray.md"};function n(p,a,l,h,o,d){return i(),t("div",null,a[0]||(a[0]=[r('<p><a href="./">Home</a> &gt; <a href="./cfunctool.html">cfunctool</a> &gt; <a href="./cfunctool.iseqarray.html">isEqArray</a></p><h2 id="iseqarray-function" tabindex="-1">isEqArray() function <a class="header-anchor" href="#iseqarray-function" aria-label="Permalink to &quot;isEqArray() function&quot;">​</a></h2><p>比较两个数组是否相等。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isEqArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>v1</p></td><td><p>Array&lt;any&gt;</p></td><td><p>第一个数组，用于比较的源数组。</p></td></tr><tr><td><p>v2</p></td><td><p>Array&lt;any&gt;</p></td><td><p>第二个数组，用于比较的目标数组。</p></td></tr></tbody></table> **Returns:** <p>boolean</p><p>如果两个数组在每个位置上的元素都相等则返回 true，否则返回 false。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>const array1 = [1, 2, 3]; const array2 = [1, 2, 3]; const array3 = [1, 2, 4]; console.log(isEqArray(array1, array2)); // 输出: true console.log(isEqArray(array1, array3)); // 输出: false</p>',12)]))}const y=s(e,[["render",n]]);export{c as __pageData,y as default};

import{_ as a,c as s,o as e,ae as i}from"./chunks/framework.D5-4uJj8.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/cfunctool.tofloat.md","filePath":"etc/doc/cfunctool.tofloat.md"}'),o={name:"etc/doc/cfunctool.tofloat.md"};function l(n,t,p,h,r,d){return e(),s("div",null,t[0]||(t[0]=[i('<p><a href="./">Home</a> &gt; <a href="./cfunctool.html">cfunctool</a> &gt; <a href="./cfunctool.tofloat.html">toFloat</a></p><h2 id="tofloat-function" tabindex="-1">toFloat() function <a class="header-anchor" href="#tofloat-function" aria-label="Permalink to &quot;toFloat() function&quot;">​</a></h2><p>将给定的值转换为浮点数。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">defaultValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>value</p></td><td><p>any</p></td><td><p>要转换的值。</p></td></tr><tr><td><p>defaultValue</p></td><td><p>any</p></td><td><p><em>(Optional)</em> 如果转换失败时的默认值，默认为 0。</p></td></tr></tbody></table> **Returns:** <p>any</p><p>如果值可以转换为浮点数则返回该浮点数，否则返回默认值。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>console.log(toFloat(&#39;123.45&#39;)); // 输出: 123.45 console.log(toFloat(&#39;abc&#39;)); // 输出: 0 console.log(toFloat(&#39;123.45&#39;, 10)); // 输出: 123.45 console.log(toFloat(null, 10)); // 输出: 10 console.log(toFloat(undefined, 10)); // 输出: 10</p>',12)]))}const u=a(o,[["render",l]]);export{k as __pageData,u as default};

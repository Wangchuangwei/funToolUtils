import{_ as t,c as s,o as i,ae as r}from"./chunks/framework.G-5Kj65K.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/cfunctool.splitarray.md","filePath":"etc/doc/cfunctool.splitarray.md"}'),e={name:"etc/doc/cfunctool.splitarray.md"};function p(l,a,n,h,o,d){return i(),s("div",null,a[0]||(a[0]=[r('<p><a href="./">Home</a> &gt; <a href="./cfunctool.html">cfunctool</a> &gt; <a href="./cfunctool.splitarray.html">splitArray</a></p><h2 id="splitarray-function" tabindex="-1">splitArray() function <a class="header-anchor" href="#splitarray-function" aria-label="Permalink to &quot;splitArray() function&quot;">​</a></h2><p>将数组分割成指定大小的子数组。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> splitArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>array</p></td><td><p>Array&lt;any&gt;</p></td><td><p>要分割的数组。</p></td></tr><tr><td><p>size</p></td><td><p>number</p></td><td><p><em>(Optional)</em> 每个子数组的大小，默认为 2。</p></td></tr></tbody></table> **Returns:** <p>Array&lt;any&gt;</p><p>返回一个包含多个子数组的数组，每个子数组的大小不超过指定的 size。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>const array = [1, 2, 3, 4, 5]; console.log(splitArray(array, 2)); // 输出: [[1, 2], [3, 4], [5]] console.log(splitArray(array, 3)); // 输出: [[1, 2, 3], [4, 5]]</p>',12)]))}const y=t(e,[["render",p]]);export{c as __pageData,y as default};

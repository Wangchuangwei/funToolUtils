import{_ as a,c as r,o as e,ae as p}from"./chunks/framework.D5-4uJj8.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/cfunctool.md","filePath":"etc/doc/cfunctool.md"}'),d={name:"etc/doc/cfunctool.md"};function o(l,t,c,n,f,h){return e(),r("div",null,t[0]||(t[0]=[p('<p><a href="./">Home</a> &gt; <a href="./cfunctool.html">cfunctool</a></p><h2 id="cfunctool-package" tabindex="-1">cfunctool package <a class="header-anchor" href="#cfunctool-package" aria-label="Permalink to &quot;cfunctool package&quot;">​</a></h2><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th><p>Function</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./cfunctool.camel.html">camel(str)</a></p></td><td><p>将字符串转换为驼峰命名法。</p></td></tr><tr><td><p><a href="./cfunctool.capitalize.html">capitalize(str)</a></p></td><td><p>将字符串的首字母大写，其余字母小写。</p></td></tr><tr><td><p><a href="./cfunctool.chain.html">chain(funcs)</a></p></td><td><p>创建一个函数链，依次执行给定的函数。</p></td></tr><tr><td><p><a href="./cfunctool.clone.html">clone(obj)</a></p></td><td><p>克隆给定的对象。</p></td></tr><tr><td><p><a href="./cfunctool.dash.html">dash(str)</a></p></td><td><p>将字符串转换为 kebab-case（短横线命名法）。</p></td></tr><tr><td><p><a href="./cfunctool.debounce.html">debounce({ delay }, func)</a></p></td><td><p>创建一个防抖函数，限制函数在指定时间间隔内只执行一次。</p></td></tr><tr><td><p><a href="./cfunctool.diffarray.html">diffArray(root, other, getter)</a></p></td><td><p>计算两个数组的差集，返回在 root 数组中存在但在 other 数组中不存在的元素。</p></td></tr><tr><td><p><a href="./cfunctool.filterobjectarray.html">filterObjectArray(array, compareFunc)</a></p></td><td><p>使用比较函数过滤对象数组。</p></td></tr><tr><td><p><a href="./cfunctool.getrealarray.html">getRealArray(array)</a></p></td><td><p>返回所有非空元素的数组</p></td></tr><tr><td><p><a href="./cfunctool.getstringtype.html">getStringType(value)</a></p></td><td><p>返回数据的类型</p></td></tr><tr><td><p><a href="./cfunctool.hastypein.html">hasTypeIn(value, types)</a></p></td><td><p>返回数据是否属于给定的类型中</p></td></tr><tr><td><p><a href="./cfunctool.invert.html">invert(obj)</a></p></td><td><p>反转对象的键和值。</p></td></tr><tr><td><p><a href="./cfunctool.is.html">is(value, type)</a></p></td><td><p>返回数据是否是判断的类型</p></td></tr><tr><td><p><a href="./cfunctool.isarray.html">isArray(value)</a></p></td><td><p>检查给定的值是否为数组。</p></td></tr><tr><td><p><a href="./cfunctool.isarrayexist.html">isArrayExist(array)</a></p></td><td><p>检查数组是否存在且不为空。</p></td></tr><tr><td><p><a href="./cfunctool.isboolean.html">isBoolean(value)</a></p></td><td><p>检查给定的值是否为布尔类型。</p></td></tr><tr><td><p><a href="./cfunctool.isdate.html">isDate(value)</a></p></td><td><p>检查给定的值是否为 Date 类型。</p></td></tr><tr><td><p><a href="./cfunctool.isempty.html">isEmpty(value)</a></p></td><td><p>返回判断的数据是否为空</p></td></tr><tr><td><p><a href="./cfunctool.iseqarray.html">isEqArray(v1, v2)</a></p></td><td><p>比较两个数组是否相等。</p></td></tr><tr><td><p><a href="./cfunctool.iseqtype.html">isEqType(value1, value2)</a></p></td><td><p>检查两个数据的类型是否相等</p></td></tr><tr><td><p><a href="./cfunctool.iseqvalue.html">isEqValue(value1, value2)</a></p></td><td><p>检查比较的两个参数是否相等，包括其值和类型是否相等，考虑顺序。</p></td></tr><tr><td><p><a href="./cfunctool.isfloat.html">isFloat(value)</a></p></td><td><p>检查给定的值是否为浮点数。</p></td></tr><tr><td><p><a href="./cfunctool.isfunction.html">isFunction(value)</a></p></td><td><p>检查给定的值是否为函数类型。</p></td></tr><tr><td><p><a href="./cfunctool.isint.html">isInt(value)</a></p></td><td><p>检查给定的值是否为整数。</p></td></tr><tr><td><p><a href="./cfunctool.isnull.html">isNull(value)</a></p></td><td><p>返回数据是否是null,为空</p></td></tr><tr><td><p><a href="./cfunctool.isnumber.html">isNumber(value)</a></p></td><td><p>检查给定的值是否为数字类型。</p></td></tr><tr><td><p><a href="./cfunctool.isobject.html">isObject(value)</a></p></td><td><p>检查给定的值是否为普通对象。</p></td></tr><tr><td><p><a href="./cfunctool.ispromise.html">isPromise(value)</a></p></td><td><p>检查给定的值是否为 Promise 对象。</p></td></tr><tr><td><p><a href="./cfunctool.isrange.html">isRange(number, start, end)</a></p></td><td><p>检查给定的数字是否在指定范围内。</p></td></tr><tr><td><p><a href="./cfunctool.isreftype.html">isRefType(value)</a></p></td><td><p>检查给定的值是否为引用类型。</p><p>引用类型包括对象、数组、函数等。</p></td></tr><tr><td><p><a href="./cfunctool.issimpletype.html">isSimpleType(value)</a></p></td><td><p>检查给定的值是否为简单类型。</p><p>简单类型包括 undefined、null、boolean、number、string 和 symbol。</p></td></tr><tr><td><p><a href="./cfunctool.isundefined.html">isUndefined(value)</a></p></td><td><p>返回数据是否是undefined,为未定义</p></td></tr><tr><td><p><a href="./cfunctool.iterate.html">iterate(length, func, initValue)</a></p></td><td><p>迭代执行给定的函数指定次数，并返回最终结果。</p></td></tr><tr><td><p><a href="./cfunctool.keys.html">keys(obj)</a></p></td><td><p>获取对象的所有键路径。</p></td></tr><tr><td><p><a href="./cfunctool.pascal.html">pascal(str)</a></p></td><td><p>将字符串转换为 PascalCase（帕斯卡命名法）。</p></td></tr><tr><td><p><a href="./cfunctool.random.html">random(min, max)</a></p></td><td><p>生成一个在指定范围内的随机整数。</p></td></tr><tr><td><p><a href="./cfunctool.randomdraw.html">randomDraw(array)</a></p></td><td><p>从数组中随机抽取一个元素。</p></td></tr><tr><td><p><a href="./cfunctool.series.html">series(arrays, toKey)</a></p></td><td><p>创建一个系列对象，提供对数组中元素的便捷访问方法。</p></td></tr><tr><td><p><a href="./cfunctool.shuffle.html">shuffle(array)</a></p></td><td><p>随机打乱数组中元素的顺序。</p></td></tr><tr><td><p><a href="./cfunctool.sortobjectarray.html">sortObjectArray(array, getter, dir)</a></p></td><td><p>根据选定key的value的字母顺序，将对象数组排列</p></td></tr><tr><td><p><a href="./cfunctool.splitarray.html">splitArray(array, size)</a></p></td><td><p>将数组分割成指定大小的子数组。</p></td></tr><tr><td><p><a href="./cfunctool.template.html">template(str, data, regex)</a></p></td><td><p>使用提供的数据替换字符串中的模板占位符。</p></td></tr><tr><td><p><a href="./cfunctool.throttle.html">throttle({ interval }, func)</a></p></td><td><p>创建一个节流函数，限制函数在指定时间间隔内只执行一次。</p></td></tr><tr><td><p><a href="./cfunctool.tofloat.html">toFloat(value, defaultValue)</a></p></td><td><p>将给定的值转换为浮点数。</p></td></tr><tr><td><p><a href="./cfunctool.uid.html">uid(length, specials)</a></p></td><td><p>生成指定长度的唯一标识符（UID）。</p></td></tr><tr><td><p><a href="./cfunctool.valcountobjectarray.html">valCountObjectArray(array, getter)</a></p></td><td><p>根据指定的 getter 函数统计数组中每个值的出现次数。</p></td></tr></tbody></table>',4)]))}const s=a(d,[["render",o]]);export{i as __pageData,s as default};

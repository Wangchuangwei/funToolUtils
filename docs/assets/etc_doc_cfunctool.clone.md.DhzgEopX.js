import{_ as t,c as e,o as s,ae as i}from"./chunks/framework.D5-4uJj8.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/cfunctool.clone.md","filePath":"etc/doc/cfunctool.clone.md"}'),n={name:"etc/doc/cfunctool.clone.md"};function o(l,a,p,c,r,h){return s(),e("div",null,a[0]||(a[0]=[i('<p><a href="./">Home</a> &gt; <a href="./cfunctool.html">cfunctool</a> &gt; <a href="./cfunctool.clone.html">clone</a></p><h2 id="clone-function" tabindex="-1">clone() function <a class="header-anchor" href="#clone-function" aria-label="Permalink to &quot;clone() function&quot;">​</a></h2><p>克隆给定的对象。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> clone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th><p>Parameter</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p>obj</p></td><td><p>any</p></td><td><p>要克隆的对象。</p></td></tr></tbody></table> **Returns:** <p>any</p><p>返回克隆后的对象。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>const original = { a: 1, b: { c: 2 } }; const cloned = clone(original); console.log(cloned); // 输出: { a: 1, b: { c: 2 } } console.log(cloned === original); // 输出: false console.log(cloned.b === original.b); // 输出: true</p>',12)]))}const g=t(n,[["render",o]]);export{k as __pageData,g as default};
